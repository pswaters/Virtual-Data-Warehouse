{{#each individualSourceToTargetMapping}}
--
-- Staging Area View definition for {{targetTable}}
-- Generated at {{../generationDateTime}}
--

GO
USE [{{../metadataConfiguration.stagingAreaDatabaseName}}]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[{{../metadataConfiguration.vedwSchemaName}}].[{{targetTable}}]') AND type in (N'V'))
DROP VIEW [{{../metadataConfiguration.vedwSchemaName}}].[{{targetTable}}]
GO

CREATE VIEW [{{../metadataConfiguration.vedwSchemaName}}].[{{targetTable}}] AS
WITH STG_CTE AS
(
SELECT
   {{#each columnMapping}}
   [{{sourceColumn.columnName}}] AS [{{targetColumn.columnName}}],
   {{/each}}
   HASHBYTES('MD5',
   {{#each columnMapping}}
      ISNULL(RTRIM(CONVERT(NVARCHAR(100),[{{sourceColumn.columnName}}])), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}
   {{/each}}
   ) AS [{{../metadataConfiguration.recordChecksumAttribute}}]
FROM [{{../metadataConfiguration.sourceDatabaseName}}].[dbo].[{{sourceTable}}]
),
PSA_CTE AS
(
SELECT
   A.[{{../metadataConfiguration.recordChecksumAttribute}}] AS [{{../metadataConfiguration.recordChecksumAttribute}}], 
   {{#each columnMapping}}
   A.[{{sourceColumn.columnName}}] AS [{{targetColumn.columnName}}]{{#unless @last}},{{/unless}}
   {{/each}}
FROM [{{../metadataConfiguration.persistentStagingDatabaseName}}].[{{../metadataConfiguration.persistentStagingSchemaName}}].[{{lookupTable}}] A
JOIN
   (
   SELECT {{#each businessKey}}  {{#each businessKeyComponentMapping}}
      [{{sourceColumn.columnName}}], {{/each}} {{/each}}
      MAX({{../metadataConfiguration.loadDateTimeAttribute}}) AS MAX_{{../metadataConfiguration.loadDateTimeAttribute}}
   FROM [{{../metadataConfiguration.persistentStagingDatabaseName}}].[{{../metadataConfiguration.persistentStagingSchemaName}}].[{{lookupTable}}]
   GROUP BY {{#each businessKey}}  {{#each businessKeyComponentMapping}}
      [{{sourceColumn.columnName}}] {{#unless @last}},{{/unless}}{{/each}} {{/each}}
   ) B ON {{#each businessKey}}  {{#each businessKeyComponentMapping}}
   A.[{{sourceColumn.columnName}}] = B.[{{sourceColumn.columnName}}] AND {{/each}} {{/each}}
   A.{{../metadataConfiguration.loadDateTimeAttribute}} = B.MAX_{{../metadataConfiguration.loadDateTimeAttribute}}
   WHERE {{../metadataConfiguration.changeDataCaptureAttribute}} != 'Delete'
)
SELECT
   {{#each columnMapping}}
   CASE 
     WHEN STG_CTE.{{#each ../businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}} IS NULL 
     THEN PSA_CTE.[{{sourceColumn.columnName}}]
     ELSE STG_CTE.[{{sourceColumn.columnName}}] 
   END AS [{{sourceColumn.columnName}}],{{/each}}
   CASE 
     WHEN STG_CTE.{{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}} IS NULL
     THEN PSA_CTE.[{{../metadataConfiguration.recordChecksumAttribute}}]
     ELSE STG_CTE.[{{../metadataConfiguration.recordChecksumAttribute}}]
   END AS [{{../metadataConfiguration.recordChecksumAttribute}}], 
   CASE 
      WHEN STG_CTE.{{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}} IS NULL THEN 'Delete' 
      WHEN PSA_CTE.{{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}} IS NULL THEN 'Insert' 
      WHEN STG_CTE.{{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}}  IS NOT NULL 
         AND PSA_CTE.{{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}[{{sourceColumn.columnName}}]{{/if}}{{/each}}{{/each}} IS NOT NULL 
         AND STG_CTE.[{{../metadataConfiguration.recordChecksumAttribute}}]  != PSA_CTE.[{{../metadataConfiguration.recordChecksumAttribute}}] THEN 'Change' ELSE 'No Change' 
   END AS [CDC_OPERATION],
   'PROFILER' AS {{../metadataConfiguration.recordSourceAttribute}},
   ROW_NUMBER() OVER
      (ORDER BY
         {{#each businessKey}}{{#each businessKeyComponentMapping}}CASE WHEN STG_CTE.[{{sourceColumn.columnName}}] IS NULL THEN PSA_CTE.[{{sourceColumn.columnName}}] ELSE STG_CTE.[{{sourceColumn.columnName}}] END{{#unless @last}},{{/unless}}{{/each}}{{/each}}
      ) AS {{../metadataConfiguration.sourceRowIdAttribute}},
   GETDATE() {{../metadataConfiguration.eventDateTimeAttribute}}
FROM STG_CTE
FULL OUTER JOIN PSA_CTE ON {{#each businessKey}}  {{#each businessKeyComponentMapping}}
    PSA_CTE.[{{sourceColumn.columnName}}] = STG_CTE.[{{sourceColumn.columnName}}]{{#unless @last}} AND{{/unless}}{{/each}} {{/each}}
WHERE
(
   CASE
      WHEN {{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}STG_CTE.[{{sourceColumn.columnName}}] IS NULL THEN 'Delete'{{/if}}{{/each}}{{/each}}
      WHEN {{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}PSA_CTE.[{{sourceColumn.columnName}}] IS NULL THEN 'Insert'{{/if}}{{/each}}{{/each}}
      WHEN {{#each businessKey}}{{#each businessKeyComponentMapping}}{{#if @first}}PSA_CTE.[{{sourceColumn.columnName}}] IS NOT NULL AND PSA_CTE.{{sourceColumn.columnName}} IS NOT NULL AND STG_CTE.[{{../../../metadataConfiguration.recordChecksumAttribute}}] != PSA_CTE.[{{../../../metadataConfiguration.recordChecksumAttribute}}] THEN 'Change'{{/if}}{{/each}}{{/each}}
      ELSE 'No Change'
   END
) != 'No Change'
{{/each}}
